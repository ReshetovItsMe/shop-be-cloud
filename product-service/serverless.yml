service: product-service
frameworkVersion: "2"

custom:
  webpack:
    webpackConfig: "./webpack.config.js"
    includeModules: true

plugins: ["serverless-webpack", "serverless-dotenv-plugin"]

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: ${env:REGION}
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    PG_HOST: ${env:PG_HOST}
    PG_PORT: ${env:PORT}
    PG_DATABASE: ${env:PG_DB}
    PG_USERNAME: ${env:PG_USERNAME}
    PG_PASSWORD: ${env:PG_PASSWORD}
    SQS_URL:
      Ref: catalogItemsQueue
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "sqs:*"
          Resource:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${env:SQS_QUEUE_NAME}

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: /products
          method: get
          cors: true
  createProduct:
    handler: handler.createNewProduct
    events:
      - http:
          path: /products
          method: post
          cors: true
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: /products/{productId}
          method: get
          cors: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn
